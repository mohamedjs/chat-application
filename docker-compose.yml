version: "3.3"

services:

  nginx:
    build:
      context: ./devops
      dockerfile: Dockerfile
    image: "mohamedlavu/docker-nginx:latest"
    container_name: nginx
    ports:
      - "${APP_PORT:-80}:80"
    volumes:
      - ${APP_PATH}:${APP_DOCUMENT_ROOT}
      - ${SITE_PATH}:${SITE_APP_DOCUMENT_ROOT}
      - ${SOCKET_SERVER_PATH}:${SOCKET_SERVER_DOCUMENT_ROOT}
      - ./devops/nginx/config/nginx.conf:/etc/nginx/nginx.conf
      - ./devops/nginx/config/default.conf:/etc/nginx/conf.d/default.conf
      - ./devops/nginx/config/app.conf:/etc/nginx/conf.d/app.conf
      - ./devops/nginx/config/site.conf:/etc/nginx/conf.d/site.conf
      - ./devops/nginx/config/socket-server.conf:/etc/nginx/conf.d/socket-server.conf
      - ./devops/hosts:/etc/hosts
    networks:
      - appnet
    depends_on:
      - reactjs
      - php
      - socket-server
      - db

  php:
    build:
      context: ${APP_PATH}
      dockerfile: Dockerfile
    image: php:8.0-fpm
    container_name: php
    volumes:
      - ${APP_PATH}:${APP_DOCUMENT_ROOT}
      - ./devops/php-fpm/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - ./devops:/var/www/html/devops
    networks:
      - appnet
    depends_on:
      - redis
      - db

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - appnet
    volumes:
      - redis_data:/data

  socket-server:
    build:
      context: ${SOCKET_SERVER_PATH}
      dockerfile: Dockerfile.socket
    container_name: socket-server
    volumes:
      - ${SOCKET_SERVER_PATH}:${SOCKET_SERVER_DOCUMENT_ROOT}
    ports:
      - "${SOCKET_SERVER_PORT:-6001}:6001"
    networks:
      - appnet
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "localhost:6001"]
      interval: 30s
      timeout: 10s
      retries: 3

  reactjs:
    build:
      context: ${SITE_PATH}
      dockerfile: Dockerfile
    container_name: reactjs
    volumes:
      - ${SITE_PATH}:${SITE_APP_DOCUMENT_ROOT}
    ports:
      - "${SITE_PORT:-5000}:5000"
    networks:
      - appnet
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "localhost:5000"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: mysql:8.0.32
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-chat_app}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root}
      SERVICE_TAGS: dev
    volumes:
      - dbdata:/var/lib/mysql/
      - ./devops/mysql:/var/lib/mysql-files
    networks:
      - appnet

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    links:
      - db
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
      UPLOAD_LIMIT: 300M
    restart: always
    ports:
      - "${PHPMYADMIN_PORT:-9090}:80"
    networks:
      - appnet

networks:
  appnet:
    driver: "bridge"

volumes:
  dbdata:
    driver: local

  redis_data:
    driver: local
